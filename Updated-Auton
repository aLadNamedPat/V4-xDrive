#pragma config(Motor,  port4,           leftFront,     tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port5,           rightFront,    tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port6,           leftBack,      tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port7,           rightBack,     tmotorVex393_MC29, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
void Strafe(float degrees, float speed = 1,float time = 0)
{
	float radians = degreesToRadians(degrees);
	float converted_radians = (radians - PI / 4);
// Change motor power based on power
// X power for robot
	float motorXspeed = speed * cos(converted_radians);
	float motorYspeed = speed * sin(converted_radians);

	motor[leftFront] = motorXspeed;
	motor[rightFront] = motorYspeed;
	motor[leftBack] =  -motorYspeed;
	motor[rightBack] = -motorXspeed;
	wait1Msec(time);

void PIDStrafe(float degrees, int distance, float speed, float kP, float kI, float kD){
	float radians = degreesToRadians(degrees);
	float converted_radians = (radians - PI / 4);
	float maxSpeed = 127;
	float RPM = (speed / maxSpeed) * 100;
	float circumferenceInInches = (6.5 * PI);
	float circumferenceInFeet = circumferenceInInches / 12;
	float feetPerSecond = (RPM * circumferenceInFeet) / 60;
	float xRotation, yRotation = distance 
	
}
task main()
{



}
